/**
 * Sample Certificate Data for Development and Testing
 * 
 * This file contains mock JWT certificates for testing the QR scanner
 * and certificate verification functionality during development.
 */

// Sample valid JWT certificate (generated by the Python script)
export const SAMPLE_VALID_CERTIFICATE = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cmVXaXBlQ2VydGlmaWNhdGUiLCJpYXQiOjE3NTg4MDI1NTEsImRldmljZUlEIjoiVEVTVC1ERVZJQ0UtMTIzNDUiLCJ3aXBlTWV0aG9kIjoiTklTVCBTUCA4MDAtODggUHVyZ2UiLCJ3aXBlU3RhdHVzIjoiQ29tcGxldGUiLCJ3aXBlVGltZXN0YW1wIjoxNzU4ODAyMjUxLCJkYXRhSGFzaCI6InNoYTI1NjphYmNkZWYxMjM0NTY3ODkwYWJjZGVmMTIzNDU2Nzg5MGFiY2RlZjEyMzQ1Njc4OTBhYmNkZWYxMjM0NTY3ODkwIn0.IblMVMTL46IvmgQweZzdWC7sFN4zDrsUBEi-MXDwBd35ioxsdN_D9geIXm996ztUDyKxpgcDYcw9ow_fWdQi8ut75rbS8dPUCobMPtu3mM7edpHn07DSklVhSCY7BoI8cdc_OiSPTp5K836L768u5GyzJCEm8-H-98ZIOOJSvJC9ORzxoPWgObz6kgRtlOYYXiulyOcl1EZgLE5rOKw0X3Gp_ObKcPId1EVAkYpZQ9GI-F1ADANRlV0VGX7S2swjrwFpQ0o-vv9J9ARvW4P_4s6CGbTW6X8Ws6InCzW4lHAxaaWxPn1Tc-z84cT5vbOFxmtBxKkagUp-vv9J9ARvW4P_4s6CGbTW6X8Ws6InCzW4lHAxaaWxPn1Tc-z84cT5vbOFxmtBxKkagUp';

// Sample certificate data for display testing
export const SAMPLE_CERTIFICATE_DATA = {
  deviceId: 'TEST-DEVICE-12345',
  wipeMethod: 'NIST SP 800-88 Purge',
  wipeStatus: 'Complete',
  wipeTimestamp: 1758802251,
  issueTimestamp: 1758802551,
  issuer: 'OBLIVION',
  dataHash: 'sha256:abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890',
};

// Sample invalid certificate for error testing
export const SAMPLE_INVALID_CERTIFICATE = 'invalid.jwt.token';

// Sample expired certificate
export const SAMPLE_EXPIRED_CERTIFICATE = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTZWN1cmVXaXBlQ2VydGlmaWNhdGUiLCJpYXQiOjE2MDAwMDAwMDAsImV4cCI6MTYwMDAwMzYwMCwiZGV2aWNlSUQiOiJERVYtRVhQSVJFRC0xMjMiLCJ3aXBlTWV0aG9kIjoiRG9EIDUyMjAuMjItTSIsIndpcGVTdGF0dXMiOiJDb21wbGV0ZSIsIndpcGVUaW1lc3RhbXAiOjE1OTk5OTk4MDAsImRhdGFIYXNoIjoic2hhMjU2OmV4cGlyZWRjZXJ0aWZpY2F0ZWhhc2gifQ.expired_signature_here';

// QR code test data (what would be scanned from QR codes)
export const QR_TEST_DATA = {
  valid: SAMPLE_VALID_CERTIFICATE,
  invalid: SAMPLE_INVALID_CERTIFICATE,
  expired: SAMPLE_EXPIRED_CERTIFICATE,
  malformed: 'not.a.jwt',
  empty: '',
};

// Mock device information for testing
export const MOCK_DEVICE_INFO = {
  deviceId: 'TEST-DEVICE-001',
  platform: 'Android',
  version: '11.0',
  model: 'Test Device',
  manufacturer: 'Test Corp',
};

// Test scenarios for comprehensive testing
export const TEST_SCENARIOS = [
  {
    name: 'Valid Certificate',
    description: 'A properly signed and valid certificate',
    qrData: SAMPLE_VALID_CERTIFICATE,
    expectedResult: 'valid',
  },
  {
    name: 'Invalid Signature',
    description: 'Certificate with invalid signature',
    qrData: SAMPLE_INVALID_CERTIFICATE,
    expectedResult: 'invalid',
  },
  {
    name: 'Malformed JWT',
    description: 'Not a proper JWT format',
    qrData: 'not.a.jwt',
    expectedResult: 'invalid',
  },
  {
    name: 'Empty Data',
    description: 'Empty QR code data',
    qrData: '',
    expectedResult: 'invalid',
  },
  {
    name: 'Expired Certificate',
    description: 'Certificate that has expired',
    qrData: SAMPLE_EXPIRED_CERTIFICATE,
    expectedResult: 'expired',
  },
];

// Helper function to generate test QR data
export const generateTestQRData = (scenario = 'valid') => {
  return QR_TEST_DATA[scenario] || QR_TEST_DATA.valid;
};

// Helper function to get formatted test certificate
export const getTestCertificate = () => {
  return SAMPLE_CERTIFICATE_DATA;
};